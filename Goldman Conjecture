def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

def Goldbach(n):
    if n <= 2 or n % 2 != 0:
        return None
    
    primes = []
    for i in range(2, n):
        if is_prime(i):
            primes.append(i)
    
    list = []
    
    for prime in primes:
        if is_prime(n - prime):
            list += [(n - prime, prime)]
    

    return list[len(list)//2::]

n=int(input())
print(sorted(Goldbach(n)))





import math
def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

def Goldbach(n):
    if n <= 2 or n % 2 != 0:
        return None
    
    primes = []
    for i in range(2, n):
        if is_prime(i):
            primes.append(i)
    
    list = []
    
    for prime in primes[math.ceil(len(primes)/2):]:
        if is_prime(n - prime):
            list += [(n - prime, prime)]
    

    return list

n=int(input())
print(sorted(Goldbach(n)))